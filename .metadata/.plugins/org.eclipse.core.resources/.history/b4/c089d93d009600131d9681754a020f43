import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;
public class Location extends BaseClass {

	private ArrayList<Vehicle.TravelTypes> travelTypes;
	private int id;
	private double latitude;
	private double longitude;
	private String name;
	
	public Location()
	{
		travelTypes=new ArrayList();
		MarkNew();
	}
	public Location(int id)
	{
		this.id=id;
		travelTypes=new ArrayList();
	}
	
	public int getID()
	{
		return id;
	}
	
	public void setLatitude(double lat)
	{
		if(this.latitude!=lat)
		{
			this.latitude=lat;
			MarkDirty();
		}
	}
	
	public double getLatitude()
	{
		return this.latitude;
	}
	
	public void setLongitude(double lon)
	{
		if(this.longitude!=lon)
		{
			this.longitude=lon;
			MarkDirty();
		}
	}
	public double getLongitude()
	{
		return this.longitude;
	}
	
	public void addTravelMode(Vehicle.TravelTypes mode)
	{
		if(!travelTypes.contains(mode))
		{
			travelTypes.add(mode);
			MarkDirty();
		}
	}
	
	public boolean travelTypeAvailable(Vehicle.TravelTypes mode)
	{
		if(travelTypes.contains(mode))
		{
			return true;
		}
		return false;
	}
	
	public void setName(String s)
	{
		if(!name.equals(s))
		{
			name=s;
			MarkDirty();
		}
	}
	
	public String getName()
	{
		return name;
	}
	
	@Override
	void Update() {
		if(isNew())
		{
			
		}
		else
		{
			if(isDirty())
			{
				
			}
		}

	}

	@Override
	void Delete() {
		// TODO Auto-generated method stub

	}
	public static Location Load(int id)
	{
		try
		{
			Connection c = getConnection();
			ResultSet rs = c.createStatement().executeQuery("Select * from Location where LocationId = " + id);
			if(rs.next())
				return BuildFromDataRow(rs);
			return null;
		}
		catch(Exception ex)
		{
			System.out.println("Error " + ex);
		}
 		return null;
	}
	
	public static ArrayList<Location> LoadAll(String where)
	{
		ArrayList<Location> temp = new ArrayList();
		try
		{
			Connection c = getConnection();
			ResultSet rs = c.createStatement().executeQuery("Select * from Location " + where);
			while(rs.next())
				temp.add(BuildFromDataRow(rs));
		}
		catch(Exception ex)
		{
			System.out.println("Error " + ex);
		}
		return temp;
	}
	private static Location BuildFromDataRow(ResultSet rs)throws SQLException
	{
		Location temp = new Location(rs.getInt("LocationId"));
		temp.setLatitude(rs.getDouble("Latitude"));
		temp.setLongitude(rs.getDouble("Longitude"));
		if(rs.getString("Name")!=null)
			temp.setName(rs.getString("Name"));
		temp.addTravelMode(Vehicle.loadType(rs.getString("TravelType1")));
		if(rs.getString("TravelType2")!=null)
		{
			temp.addTravelMode(Vehicle.loadType(rs.getString("TravelType2")));
			if(rs.getString("TravelType3")!=null)
			{
				temp.addTravelMode(Vehicle.loadType(rs.getString("TravelType3")));
				if(rs.getString("TravelType4")!=null)
				{
					temp.addTravelMode(Vehicle.loadType(rs.getString("TravelType4")));
				}
				if(rs.getString("TravelType5")!=null)
				{
					temp.addTravelMode(Vehicle.loadType(rs.getString("TravelType5")));
					if(rs.getString("TravelType6")!=null)
					{
						temp.addTravelMode(Vehicle.loadType(rs.getString("TravelType6")));
					}
				}
			}
		}
		temp.MarkClean();
		
		return temp;
	}

}
